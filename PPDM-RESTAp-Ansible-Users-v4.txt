root@rest-01:~/bh-code# cat ppdm-create-user_v4.yaml
- name: PPDM Login, Get Users, Create a User, Get Users
  hosts: localhost
  gather_facts: no
  connection: local
  vars_prompt:
    - name: fqdn
      prompt: Enter PPDM FQDN
      private: no
    - name: user
      prompt: Enter PPDM User
      private: no
    - name: password
      prompt: Enter Password for this user
      private: yes
    - name: newuser
      prompt: (new)Enter Username for the new user
      private: no
    - name: newpassword
      prompt: (new)Enter Password for this new user
      private: yes
    - name: newfirstname
      prompt: (new)Enter FirstName for the new user
      private: no
    - name: newlastname
      prompt: (new)Enter LastName for this new user
      private: no
    - name: newemail
      prompt: (new)Enter Email address of this new user
      private: no
    - name: newuserrole
      prompt: (new)Enter Role for the new user(Admin|User)
      private: no

  vars:
    URI: https://{{ fqdn }}:8443/api/v2

  tasks:
  - name: Authenticate to API and retrieve authentication token
    uri:
      method: POST
      validate_certs: no
      return_content: yes
      url: "{{ URI }}/login"
      body_format: json
      body:
        username: "{{ user }}"
        password: "{{ password }}"
    register: token

  - name: Get Users - Before
    uri:
      method: GET
      validate_certs: no
      return_content: yes
      headers:
        Authorization: "Bearer {{ token.json.access_token }}"
      url: "{{ URI }}/users"
    register: users

  - name: Print Users - Before
    debug: msg="{{ users.json | json_query(jmesquery)}}"
    vars:
      jmesquery: "content[*].username"

  - name: Create a User
    uri:
      method: POST
      status_code: 201
      validate_certs: no
      return_content: yes
      headers:
        Authorization: "Bearer {{ token.json.access_token }}"
      url: "{{ URI }}/users"
      body_format: json
      body:
        firstName: "{{ newfirstname }}"
        emailAddress: "{{ newemail }}"
        forcePasswordChange: false
        lastName: "{{ newlastname }}"
        password: "{{ newpassword }}"
        roleId: "2bc90020-7675-0136-29e9-5bbd3ce729b0"
        username: "{{ newuser }}"

  - name: Get Users - After
    uri:
      method: GET
      validate_certs: no
      return_content: yes
      headers:
        Authorization: "Bearer {{ token.json.access_token }}"
      url: "{{ URI }}/users"
    register: users

  - name: Format info
    set_fact:
      uname: "{{ users.json | json_query(\"content[*].username\") }}"
      fname: "{{ users.json | json_query(\"content[*].firstName\") }}"
      lname: "{{ users.json | json_query(\"content[*].lastName\") }}"
      email: "{{ users.json | json_query(\"content[*].emailAddress\") }}"

  - name: Print Users - After
    debug:
      msg: "{{ dict(uname | zip(email)) }}"


root@rest-01:~/bh-code#